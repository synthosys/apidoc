<div id="header" class="page-header">
    <h2>JavaScript SDK</h1>
	<p class="lead">A software development kit to include in your JavaScript projects.</p>
</div>
<div class="section">
<h2>How To Use</h2>
<p><a href="js/libs/sm.js" target="_blank">Download the script file</a> and place it in your project directory.</p>
<p>Include it in your project as follows:</p>
<code>&lt;script src="pathtofile/sm.js" type="text/javascript" /&gt;</code>
</div>
<div class="section">
<h2>StarMetrics JavaScript SDK Usage</h2>
<form class="well form-horizontal">
	<div class="control-group">
		<label class="control-label"><strong>Show:</strong></label>
		<div class="controls">
			<select id="resource">
				<option value="">Select One</option>
				<option value="topics">List of Topics</option>
				<option value="programs">List of Programs</option>
				<option value="divisions">List of Divisions</option>
				<option value="proposals">List of Proposals</option>
				<option value="institutions">List of Institutions</option>
				<option value="researchers">List of Researchers</option>
				<option value="">----</option>
				<option value="proposal">Proposal Details</option>
				<option value="institution">Institution Details</option>
				<option value="researcher">Researcher Details</option>
			</select>
		    <p class="help-block">Select an option above. The SDK call and the call results will be displayed below.</p>
		</div>
       </div>
</form>
<h2>Call</h2>
<pre id="call"></pre>
<h2>Result</h2>
<pre id="result"></pre>
</div>

<script type="text/javascript">
LoadView = Backbone.View.extend({
	events: {
		"change select#resource": "load",
	},
	load: function(e) {
		if (e) e.preventDefault();
		$('#result', this.el).html('Loading...');
		var resource = $('#resource').val();
		var options;
		if (resource=='topics') {
			options = {org:'CMMI',year:'2007-2009'};
			StarMetrics.topics(options,this.render);
		} else if (resource=='programs') {
			options = {org:'CMMI',year:'2007-2009'};
			StarMetrics.programs(options,this.render);						
		} else if (resource=='divisions') {
			options = {t:'551',year:'2007-2009'};
			StarMetrics.divisions(options,this.render);
		} else if (resource=='proposals') {
			options = {org:'CMMI',year:'2007-2009'};
			StarMetrics.proposals(options,this.render);						
		} else if (resource=='institutions') {
			options = {org:'CMMI',year:'2007-2009'};
			StarMetrics.institutions(options,this.render);						
		} else if (resource=='researchers') {
			options = {org:'CMMI',year:'2007-2009'};
			StarMetrics.researchers(options,this.render);						
		} else if (resource=='proposal') {
			options = '1126899';
			StarMetrics.proposal(options,this.render);						
		} else if (resource=='institution') {
			options = '0038950000';
			StarMetrics.institution(options,this.render);						
		} else if (resource=='researcher') {
			options = '269729592';
			StarMetrics.researcher(options,this.render);
		}
		if (typeof(options)!=='string') options = JSON.stringify(options);
		$('#call', this.el).html("StarMetrics."+resource+"("+options+",callback);");		
	},
	render: function(result) {
		if (result) result = jsl.format.formatJson(JSON.stringify(result));
		else result = '<div class="alert"><strong>Error</strong>: You must be connected to the NSF network to access the API.</div>';
		$('#result', this.el).html(result);
	}	
});
$(function(){
	var view = new LoadView({el:$('#main')});
});
</script>
